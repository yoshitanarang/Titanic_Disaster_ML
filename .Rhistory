?dist
return (abs(a-b))
return (abs(a-b))
source("~/.active-rstudio-document")
dis = function(a, b){
return (abs(a-b))
}
source("~/.active-rstudio-document")
return (abs(a - b))
10 %% 2
11 %% 2
source("~/.active-rstudio-document")
is.even(9)
is.even(10)
is.even(a)
install.packages("rmarkdown")
install.packages("tinytex")
installed.packages("knitr")
install.packages("knitr")
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
# this is a code chunk. Only code goes here.
data(cars)
summary(cars$dist)
?cars
# this is a code chunk. Only code goes here.
data(cars)
?cars
summary(cars$dist)
install_tinytex()
install_tinytex()
tinytex::install_tinytex()\
tinytex::install_tinytex()
mean(cars$speed)
hist(cars$dist)
hist(cars$dist,
main = "Histogram of Distance",
xlab = "Difference")
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
# this is a code chunk. Only code goes here.
8+9-7/3**0.3
#(a)
8+9-7/3**0.3
#(a)
8+9-7/3**0.3
#(a)
8+9-7/3**0.3
log2(sqrt((15+16)/(14+12))
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
#(a)
print(log(0,base=10))
#(a)
print(log(0,base=2)(sqrt((15+16)/(14+12)))
#(b)
print(8+9-(7/3)**0.3)
#(a)
a <- 8+9-7/3**0.3; a round(a,2)
#(a)
a <- 8+9-7/3**0.3;round(a,2)
#(b)
#(a)
a <- 8+9-7/3**0.3;round(a,2)
#(b)
b <- log(sqrt((15+16)/(14+12)))
#(a)
a <- 8+9-7/3**0.3;round(a,2)
#(b)
b <- log2(sqrt((15+16)/(14+12)))
knitr::opts_chunk$set(echo = TRUE, fig.align = "center")
a <- 8+9-7/3^0.3
View(cars)
b <- log(sqrt((15+16)/(14+12)), base=2)
data_vector <- c(2.60, 3.05, 3.74, 3.48, 5.49, 4.25, 2.57, 2.18, 3.14, 4.82, 3.28, 3.01)
print("Data: ")
data_vector
data_vector <- c(2.60, 3.05, 3.74, 3.48, 5.49, 4.25, 2.57, 2.18, 3.14, 4.82, 3.28, 3.01)
data_vector <- c(2.60, 3.05, 3.74, 3.48, 5.49, 4.25, 2.57, 2.18, 3.14, 4.82, 3.28, 3.01)
data_vector
mean(data_vector)
min(data_vector)
max(data-vector)
# (a)
a <- 8+9-7/3^0.3
# (b)
b <- log(sqrt((15+16)/(14+12)), base=2)
# (c)
min(data_vector)
max(data_vector)
x <- 1:10
x <- 1:10
x <- matrix(25:1, nrow=5, ncol=5)
x <- matrix(25:1, nrow=5, ncol=5)
x <- matrix(ncol = 5, nrow = 5)
x <- matrix(letters, ncol = 5, nrow = 5)
x <- matrix(letters, ncol = 5, nrow = 5)
View(x)
c(whales)
whales_tx <- c(74, 122, 235, 111, 292, 111,
211, 133, 156, 79)
View(cars)
View(x)
whales_tx <- c(74, 122, 235, 111, 292, 111,
211, 133, 156, 79)
whales_tx
whales_tx[2]
names (whales_fl) <- 1990:1999
names (whales_tx) <- 1990:1999
whales_tx
whales <- cbind (whales_tx , whales_fl)
whales_fl <- c(89, 254, 306, 292, 274, 233,
294, 204, 204, 90)
whales <- cbind (whales_tx , whales_fl)
whales <- rbind (whales_tx , whales_fl)
whales
t(whales)
rowSums(whales)
apply(whales, 2, median)
Student_Data_Frame <- data.frame(
Name = c("Sai", "Yoshi"),
Gender = c("Male", "Female"),
Age = c(21, 19)
)
# PRINT DATA FRAME
Student_Data_Frame
summary(Student_Data_Frame)
# ACCESS GENDER
Student_Data_Frame$Name
View(Student_Data_Frame)
View(cars)
knitr::opts_chunk$set(echo = TRUE)
round(8 + 9 - 7 / 3 ^ 0.3, digits = 2)
round(log((15+16) / (14+12)) ^ (1/2), digits = 2)
round(log(((15+16) / (14+12)) ^ (1/2), base = 2), digits = 2)
round(((11+sin(pi/4))/(factorial(3) + abs(-10)))^2, digits = 2)
RF <- c(2.60, 3.05, 3.74, 3.48, 5.49, 4.25, 2.57, 2.18, 3.14, 4.82, 3.28, 3.01)
# (b)
names(RF) <- c("Jan.", "Feb.", "Mar.", "Apr.", "May", "Jun.", "Jul.", "Aug.", "Sep.",
"Oct.", "Nov.", "Dec.")
# (b)
names(RF) <- c("Jan.", "Feb.", "Mar.", "Apr.", "May", "Jun.", "Jul.", "Aug.", "Sep.",
"Oct.", "Nov.", "Dec.")
# Calling vector, RF, to display the table of data:
RF
# (c)
round(mean(RF), digits = 2)
# (d)
which.min(RF)
knitr::opts_chunk$set(echo = TRUE, fig.align = 'center')
# (b)
names(rf) <- c("Jan.", "Feb.", "Mar.", "Apr.", "May", "Jun.", "Jul.", "Aug.", "Sep.",
"Oct.", "Nov.", "Dec.")
# (a)
rf <- c(2.60, 3.05, 3.74, 3.48, 5.49, 4.25, 2.57, 2.18, 3.14, 4.82, 3.28, 3.01)
# (a)
rf <- c(2.60, 3.05, 3.74, 3.48, 5.49, 4.25, 2.57, 2.18, 3.14, 4.82, 3.28, 3.01)
rf <- c(2.60, 3.05, 3.74, 3.48, 5.49, 4.25, 2.57, 2.18, 3.14, 4.82, 3.28, 3.01)
# (b)
names(RF) <- c("Jan.", "Feb.", "Mar.", "Apr.", "May", "Jun.", "Jul.", "Aug.", "Sep.",
"Oct.", "Nov.", "Dec.")
# Calling vector, RF, to display the table of data:
RF
# (a)
RF <- c(2.60, 3.05, 3.74, 3.48, 5.49, 4.25, 2.57, 2.18, 3.14, 4.82, 3.28, 3.01)
# (b)
names(RF) <- c("Jan.", "Feb.", "Mar.", "Apr.", "May", "Jun.", "Jul.", "Aug.", "Sep.",
"Oct.", "Nov.", "Dec.")
# Calling vector, RF, to display the table of data:
RF
# (d)
# Using which.min() to find the month with the minimum rainfall
which.min(RF)
# Using which.max() to find the month with maximum rainfall
which.max(RF)
# (a)
# As per the “Homework and Project Code Style Guide," omit spaces placed after the parentheses, and add spaces after the commas to fit the “Homework and Project Code Style Guide,"
x <- c(1, -2, 3, -4, 5, 100)
# Omit the extra space between variable, y , and the arrow (<-)
# Add a space between x and *
y <- x * -1
# Omit the spaces after the brackets
# Add spaces on both sides of operator, >
y [y > 0]
# (b)
# Add a space after the comma
# create a sequence from 1 to 50
z <- seq(1, 50)
# (b)
# Add a space after the comma
# create a sequence from 1 to 50
z <- seq(1, 50)
z
# Omit the space between the assignment operator (==)
# Add spaces before and after the modulus (%%)
# Test whether an observation is even
even <- z %% 2 == 0
# Call the variable, even, to display the data
even
# (b)
# Add a space after the comma
# create a sequence from 1 to 50
z <- seq(1, 50)
# Call Z to display the data
z
# Replace the equal sign with an arrow (<-)
# Omit spaces in between the opening and closing brackets
# Subset z by the test above
z <- z [even]
# Call Z to display the data
z
# (c)
# In a function, the arrow (<-) needs to be replaced with an equal sign (=)
# Omit spaces in between the opening and closing parentheses
# Sum should be indented by two spaces
# Add spaces before and after the division sign
mean = function (x) {
sum (x) / length (x)
}
# (c)
# In a function, the arrow (<-) needs to be replaced with an equal sign (=)
# Omit spaces in between the opening and closing parentheses
# Sum should be indented by two spaces
# Add spaces before and after the division sign
mean = function (x) {
sum (x) / length (x)
}
mean(TestSeq)
# Use of the cat() function in R to concatenate and print
PrintSquare = function (x) {
integer_one <- 1
for (i in 1:x) {
cat(integer_one ^ 2, " ")
integer_one <- integer_one + 1
}
}
# Use of the cat() function in R to concatenate and print
PrintSquare = function (x) {
integer_one <- 1
for (i in 1:x) {
cat(integer_one ^ 2, " ")
integer_one <- integer_one + 1
}
}
print(PrintSquare())
knitr::opts_chunk$set(echo = TRUE)
iris <- read.table("iris.data")
iris <- read.table("iris.data")
#load data
iris <- read.table("iris.data")
knitr::opts_chunk$set(echo = TRUE)
iris <- read.table("iris.data")
iris <- read.table("iris.data", sep= ",")
iris <- read.csv("iris.data")
# load & clean data
iris <- read.csv("iris.data")
# load data
adult <- read.csv("adult.data")
# load data
adult <- read.csv("adult.data", header = FALSE)
# load data
adult <- read.csv("adult.data", header = FALSE)
adult
# load data
adult <- read.csv("adult.data", header = FALSE)
# load data
adult <- read.csv("adult.data", header = FALSE, na.string = "?")
View(adult)
sum(is.na(adult))
sum(is.na(adult))/(n*p)
# load data
adult <- read.csv("adult.data", header = FALSE, na.string = "?")
n <- dim(adult)[1]
p <- dim(adult)[2]
sum(is.na(adult))//(n*p)
# load data
adult <- read.csv("adult.data", header = FALSE, na.string = "?")
n <- dim(adult)[1]
p <- dim(adult)[2]
sum(is.na(adult))
sum(adult$V3)
x <- c(1,2,NA)
sum(x)
sum(x, na.rm = TRUE)
# load data
adult <- read.csv("adult.data", header = FALSE, na.string = "?")
names(adult) <- c("age", "workclass", "fnlwgt", "edu", "edu_num", "martial", "occ", "relation", "race", "sex", "gain", "loss", "hpw", "native", "income")
adult$greater.50k <- adult$greater.50k == " >50k"
# load data
adult <- read.csv("adult.data", header = FALSE, na.string = "?")
names(adult) <- c("age", "workclass", "fnlwgt", "edu", "edu_num", "martial", "occ", "relation", "race", "sex", "gain", "loss", "hpw", "native", "greater.50k")
# Turn the last variable into a logical variable, where TRUE
# corresponds to an annual income greater than $50, 000, and
# FALSE otherwise
adult$greater.50k <- adult$greater.50k == " >50k"
# load data
adult <- read.csv("adult.data", header = FALSE, na.string = "?")
names(adult) <- c("age", "workclass", "fnlwgt", "edu", "edu_num", "martial", "occ", "relation", "race", "sex", "gain", "loss", "hpw", "native", "income")
adult$loss <- adult$loss * 109
adult$gain <- adult$gain * 109
View(adult)
rm(list = ls())
knitr::opts_chunk$set(echo = TRUE)
# Trend Line for priceVeryhigh
library(ggplot2)
ggplot(priceVeryhigh,
aes(x = battery_power, y = ram)) +
geom_point() + geom_smooth(method = lm)
load("~/Library/CloudStorage/Box-Box/FALL 22/STAT 3355/Homework 3.Rmd")
echo "# Mobile_Price_Data_Analysis" >> README.md
echo "# Mobile_Price_Data_Analysis" >> README.md
git init
setwd("~/Library/CloudStorage/Box-Box/Playground Learning/Kaggle/Titanic_Disaster_Dataset")
titanic.train <- read.csv(file == train.csv, stringsAsFactors = FALSE, header = TRUE)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Library/CloudStorage/Box-Box/Playground Learning/Kaggle/Titanic_Disaster_Dataset")
titanic.train <- read.csv(file == train.csv, stringsAsFactors = FALSE, header = TRUE)
setwd("~/Library/CloudStorage/Box-Box/Playground Learning/Kaggle/Titanic_Disaster_Dataset")
titanic.train <- read.csv(file = train.csv, stringsAsFactors = FALSE, header = TRUE)
library(readr)
train <- read_csv("train.csv")
View(train)
setwd("~/Library/CloudStorage/Box-Box/Playground Learning/Kaggle/Titanic_Disaster_Dataset")
titanic.train <- read.csv(file = train.csv, stringsAsFactors = FALSE, header = TRUE)
setwd("~/Library/CloudStorage/Box-Box/Playground Learning/Kaggle/Titanic_Disaster_Dataset")
titanic.train <- read.csv(file = "train.csv", stringsAsFactors = FALSE, header = TRUE)
setwd("~/Library/CloudStorage/Box-Box/Playground Learning/Kaggle/Titanic_Disaster_Dataset")
titanic.train <- read.csv(file = "train.csv",
stringsAsFactors = FALSE,
header = TRUE)
titanic.test <- read.csv(file = "test",
stringsAsFactors = FALSE,
header = TRUE)
library(readr)
train <- read_csv("train.csv")
View(train)
setwd("~/Library/CloudStorage/Box-Box/Playground Learning/Kaggle/Titanic_Disaster_Dataset")
titanic.train <- read.csv(file = "train.csv",
stringsAsFactors = FALSE,
header = TRUE)
titanic.test <- read.csv(file = "test",
stringsAsFactors = FALSE,
header = TRUE)
setwd("~/Library/CloudStorage/Box-Box/Playground Learning/Kaggle/Titanic_Disaster_Dataset")
titanic.train <- read.csv(file = "train.csv",
stringsAsFactors = FALSE,
header = TRUE)
titanic.test <- read.csv(file = "test.csv",
stringsAsFactors = FALSE,
header = TRUE)
View(train)
setwd("~/Library/CloudStorage/Box-Box/Playground Learning/Kaggle/Titanic_Disaster_Dataset")
titanic.train <- read.csv(file = "train.csv",
stringsAsFactors = FALSE,
header = TRUE)
titanic.test <- read.csv(file = "test.csv",
stringsAsFactors = FALSE,
header = TRUE)
str(titanic.test)
median(titanic.train)
median(titanic.train$age, na.rm=TRUE)
median(titanic.train$Age, na.rm = TRUE)
median(titanic.test$Age, na.rm = TRUE)
tail(titanic.train)
tail(ttanic.train$IsTrainSet)
tail(titanic.train)
tail(titanic.train$IsTrainSet)
# Creating new column & assigning all values to true
titanic.train$IsTrainSet <- TRUE
titanic.train$IsTrainSet <- TRUE
titanic.train$IsTrainSet <- TRUE
tail(titanic.train$IsTrainSet)
ncol(titanic.train)
names(titanic.train)
names(titanic.test)
# Creating new column & assigning all values to true
titanic.train$IsTrainSet <- TRUE
# Creating new column & assigning all values to false
titanic.test$IsTrainSet <- FALSE
names(titanic.train)
names(titanic.test)
View(titanic.train)
knitr::opts_chunk$set(echo = TRUE)
setwd("~/Library/CloudStorage/Box-Box/Playground Learning/Kaggle/Titanic_Disaster_Dataset")
titanic.train <- read.csv(file = "train.csv",
stringsAsFactors = FALSE,
header = TRUE, na.strings = "")
titanic.test <- read.csv(file = "test.csv",
stringsAsFactors = FALSE,
header = TRUE)
install.packages(‘psych’)
install.packages("psych")
setwd("~/Library/CloudStorage/Box-Box/Playground Learning/Kaggle/Titanic_Disaster_Dataset")
titanic.train <- read.csv(file = "train.csv",
stringsAsFactors = FALSE,
header = TRUE, na.strings = "")
titanic.test <- read.csv(file = "test.csv",
stringsAsFactors = FALSE,
header = TRUE)
View(titanic.test)
setwd("~/Library/CloudStorage/Box-Box/Playground Learning/Kaggle/Titanic_Disaster_Dataset")
titanic.train <- read.csv(file = "train.csv",
stringsAsFactors = FALSE,
header = TRUE, na.strings = "")
titanic.test <- read.csv(file = "test.csv",
stringsAsFactors = FALSE,
header = TRUE)
# titanic.train has column Cabin and Age that has many NA values
# plot missingness map which shows the missing values
library(Amelia)
